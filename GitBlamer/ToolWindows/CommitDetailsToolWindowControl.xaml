<UserControl x:Class="GitBlamer.ToolWindows.CommitDetailsToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:toolwindows="clr-namespace:GitBlamer.ToolWindows"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Margin="3">
            <Button Click="PreviousRevisionButton_Click" Margin="0,0,3,0" IsEnabled="{Binding PreviousRevisionCommandIsEnabled}">
                <Button.Template>
                    <ControlTemplate>
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.BrowsePrevious}" 
                                            Grayscale="{Binding PreviousRevisionCommandGrayscale}"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Button Click="LaterRevisionButton_Click" IsEnabled="{Binding LaterRevisionCommandIsEnabled}">
                <Button.Template>
                    <ControlTemplate>
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.BrowseNext}" 
                                            Grayscale="{Binding LaterRevisionCommandGrayscale}"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

            <ToggleButton Style="{StaticResource {x:Type ToggleButton}}" Click="ShowBothCommits_Click" IsEnabled="{Binding ShowBothCommitsCommandIsEnabled}">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="ToggleBorder" BorderBrush="SteelBlue" BorderThickness="0">
                            <imaging:CrispImage x:Name="ToggleButtonImage" Width="14" Height="14" Moniker="{x:Static catalog:KnownMonikers.DocumentCollection}" 
                                                Grayscale="{Binding ShowBothCommitsCommandGrayscale}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ToggleBorder" Property="BorderThickness" Value="1"/>
                                <Setter TargetName="ToggleButtonImage" Property="Moniker" Value="{x:Static catalog:KnownMonikers.DocumentCollection}"/>
                                <Setter Property="ToolTip" Value="Show single commit" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="ToggleBorder" Property="BorderThickness" Value="0"/>
                                <Setter TargetName="ToggleButtonImage" Property="Moniker" Value="{x:Static catalog:KnownMonikers.Document}"/>
                                <Setter Property="ToolTip" Value="Show both commits" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>

            <ToggleButton Style="{StaticResource {x:Type ToggleButton}}" ToolTip="Flip commits" 
                          Visibility="{Binding BothCommitsVisible}" Click="FlipCommits_Click">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="ToggleBorder" BorderBrush="SteelBlue" BorderThickness="0">
                            <imaging:CrispImage Width="14" Height="14" Moniker="{x:Static catalog:KnownMonikers.UnsyncedCommits}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ToggleBorder" Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="ToggleBorder" Property="BorderThickness" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
        </StackPanel>

        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border Grid.Row="{Binding LaterRevision.GridRow, FallbackValue=0}" Padding="10" BorderThickness="1" 
                BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ActiveBorderKey}}">

                    <toolwindows:RevisionControl DataContext="{Binding LaterRevision}" />

                </Border>

                <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" Visibility="{Binding BothCommitsVisible}"/>

                <Border Grid.Row="{Binding PreviousRevision.GridRow, FallbackValue=2}" Padding="10" BorderThickness="1" 
                BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ActiveBorderKey}}" Visibility="{Binding BothCommitsVisible}">

                    <toolwindows:RevisionControl DataContext="{Binding PreviousRevision}" />

                </Border>

            </Grid>

        </ScrollViewer>

    </Grid>

</UserControl>
